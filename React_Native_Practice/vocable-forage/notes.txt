TODO: Why can you add people that don't exist LOL




-Use node 14 for the EC2 server server.js
    - install with nvm install 14
    - nvm use 14
    - use nvm 16 for the expo go server on EC2 lol

- Early Trie Pruning changed 5.4 million recursive calls to average of 2368.76 calls
- Using fetch requests from server took about 202.95 ms on average
- Building Trie takes 425.399 ms on average
- Flatlist is significantly faster, it speed up the all words list tab in the results page

- HistoryScreen issues
    - It was expensive to load all games for a user into an array before the first render
    - Took about 19 seconds for 120 games, running in parallel took 1 second
    - Better approach is to retrieve 5 games at a time based on the screen that the user sees
        - Known as lazy loading


- Colors:
    Main: #a02f58
    Secondary: #FBF4F6
    Accent: #82267E
    Light: #dbbfd9
    Color for review page: #a02f58
                           #D3D3D3

- Google Vision API


// Only update in userdata is changing hasPlayed
- The userdata table stores
    - username
    - password
    - friends[]
    - gameID array [gameID, hasPlayed (bool)]

- The gamedata table stores
    - allWords []
    - board [][]
    - wordsPerCell [][]
    - players 
        - const player = {
            username,
            wordsFoundForThisPlay,
            dateAndTimePlayedAt: new Date().toISOString(),
            hasPlayed: true,
            inviter
        };

    // addPlayerToGame
    If player is in gamedata.players:
        update the player varable to
        const player = {
            username,
            wordsFound: (new entry),
            date:
            hasPlayed: true
            inviter
        }

- The gamedata table
    - Users and their word list and when they played it
    - the 2d array for the board
    - all words in the board